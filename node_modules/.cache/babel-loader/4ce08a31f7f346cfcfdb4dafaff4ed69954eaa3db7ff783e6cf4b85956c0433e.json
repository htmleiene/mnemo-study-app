{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\5019508\\\\Documents\\\\dev\\\\Mnemo\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// src/contexts/AuthContext.js\nimport { createContext, useState, useEffect } from 'react';\nimport { saveToStorage, getFromStorage } from '../utils/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Verificar autenticação ao carregar\n    const storedUser = getFromStorage('auth_user');\n    if (storedUser) {\n      setUser(storedUser);\n    }\n    setIsLoading(false);\n  }, []);\n  const login = (email, password) => {\n    // Simulação - na prática seria uma chamada API\n    const mockUser = {\n      id: 'user-123',\n      email,\n      name: 'João Paulo',\n      course: {\n        id: 'course-med-usp',\n        name: 'Medicina - USP',\n        currentSemester: 3\n      }\n    };\n    setUser(mockUser);\n    saveToStorage('auth_user', mockUser);\n    return Promise.resolve(mockUser);\n  };\n  const signup = userData => {\n    // Simulação de cadastro\n    const newUser = {\n      id: `user-${Date.now()}`,\n      ...userData\n    };\n    setUser(newUser);\n    saveToStorage('auth_user', newUser);\n    return Promise.resolve(newUser);\n  };\n  const logout = () => {\n    setUser(null);\n    saveToStorage('auth_user', null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isLoading,\n      login,\n      signup,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","saveToStorage","getFromStorage","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isLoading","setIsLoading","storedUser","login","email","password","mockUser","id","name","course","currentSemester","Promise","resolve","signup","userData","newUser","Date","now","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/5019508/Documents/dev/Mnemo/src/contexts/AuthContext.js"],"sourcesContent":["// src/contexts/AuthContext.js\r\nimport { createContext, useState, useEffect } from 'react';\r\nimport { saveToStorage, getFromStorage } from '../utils/storage';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Verificar autenticação ao carregar\r\n    const storedUser = getFromStorage('auth_user');\r\n    if (storedUser) {\r\n      setUser(storedUser);\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const login = (email, password) => {\r\n    // Simulação - na prática seria uma chamada API\r\n    const mockUser = {\r\n      id: 'user-123',\r\n      email,\r\n      name: 'João Paulo',\r\n      course: {\r\n        id: 'course-med-usp',\r\n        name: 'Medicina - USP',\r\n        currentSemester: 3\r\n      }\r\n    };\r\n    \r\n    setUser(mockUser);\r\n    saveToStorage('auth_user', mockUser);\r\n    return Promise.resolve(mockUser);\r\n  };\r\n\r\n  const signup = (userData) => {\r\n    // Simulação de cadastro\r\n    const newUser = {\r\n      id: `user-${Date.now()}`,\r\n      ...userData\r\n    };\r\n    \r\n    setUser(newUser);\r\n    saveToStorage('auth_user', newUser);\r\n    return Promise.resolve(newUser);\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    saveToStorage('auth_user', null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, isLoading, login, signup, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthContext, AuthProvider };"],"mappings":";;AAAA;AACA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,aAAa,EAAEC,cAAc,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,UAAU,GAAGX,cAAc,CAAC,WAAW,CAAC;IAC9C,IAAIW,UAAU,EAAE;MACdH,OAAO,CAACG,UAAU,CAAC;IACrB;IACAD,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACjC;IACA,MAAMC,QAAQ,GAAG;MACfC,EAAE,EAAE,UAAU;MACdH,KAAK;MACLI,IAAI,EAAE,YAAY;MAClBC,MAAM,EAAE;QACNF,EAAE,EAAE,gBAAgB;QACpBC,IAAI,EAAE,gBAAgB;QACtBE,eAAe,EAAE;MACnB;IACF,CAAC;IAEDX,OAAO,CAACO,QAAQ,CAAC;IACjBhB,aAAa,CAAC,WAAW,EAAEgB,QAAQ,CAAC;IACpC,OAAOK,OAAO,CAACC,OAAO,CAACN,QAAQ,CAAC;EAClC,CAAC;EAED,MAAMO,MAAM,GAAIC,QAAQ,IAAK;IAC3B;IACA,MAAMC,OAAO,GAAG;MACdR,EAAE,EAAE,QAAQS,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;MACxB,GAAGH;IACL,CAAC;IAEDf,OAAO,CAACgB,OAAO,CAAC;IAChBzB,aAAa,CAAC,WAAW,EAAEyB,OAAO,CAAC;IACnC,OAAOJ,OAAO,CAACC,OAAO,CAACG,OAAO,CAAC;EACjC,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBnB,OAAO,CAAC,IAAI,CAAC;IACbT,aAAa,CAAC,WAAW,EAAE,IAAI,CAAC;EAClC,CAAC;EAED,oBACEG,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEtB,IAAI;MAAEE,SAAS;MAAEG,KAAK;MAAEU,MAAM;MAAEK;IAAO,CAAE;IAAAtB,QAAA,EACrEA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC3B,EAAA,CArDIF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAuDlB,SAASD,WAAW,EAAEC,YAAY;AAAG,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}