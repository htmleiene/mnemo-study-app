{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\5019508\\\\Documents\\\\dev\\\\Mnemo\\\\src\\\\pages\\\\Study\\\\StudyPage.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getDeckFlashcards, updateFlashcardDifficulty } from '../../services/flashcards';\nimport Flashcard from '../../components/Flashcard/FlashCard';\nimport './StudyPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudyPage = () => {\n  _s();\n  const {\n    deckId\n  } = useParams();\n  const [flashcards, setFlashcards] = useState([]);\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const loadDeck = async () => {\n      setIsLoading(true);\n      const deckFlashcards = getDeckFlashcards(deckId);\n      // Ordenar por prioridade de revisão\n      deckFlashcards.sort((a, b) => new Date(a.nextReview) - new Date(b.nextReview));\n      setFlashcards(deckFlashcards);\n      setIsLoading(false);\n    };\n    loadDeck();\n  }, [deckId]);\n  const handleRateCard = difficulty => {\n    const currentCard = flashcards[currentCardIndex];\n    updateFlashcardDifficulty(currentCard.id, difficulty);\n\n    // Avançar para o próximo card ou reiniciar\n    if (currentCardIndex < flashcards.length - 1) {\n      setCurrentCardIndex(currentCardIndex + 1);\n    } else {\n      setCurrentCardIndex(0);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Carregando flashcards...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  if (flashcards.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-deck\",\n      children: \"Nenhum flashcard neste deck ainda.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"study-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-indicator\",\n      children: [\"Card \", currentCardIndex + 1, \" de \", flashcards.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flashcard, {\n      front: flashcards[currentCardIndex].front,\n      back: flashcards[currentCardIndex].back,\n      onRate: handleRateCard,\n      currentDeck: deckId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(StudyPage, \"QKGvw9Dzg0pQKvo2j381qYpTv3c=\", false, function () {\n  return [useParams];\n});\n_c = StudyPage;\nexport default StudyPage;\nvar _c;\n$RefreshReg$(_c, \"StudyPage\");","map":{"version":3,"names":["useState","useEffect","useParams","getDeckFlashcards","updateFlashcardDifficulty","Flashcard","jsxDEV","_jsxDEV","StudyPage","_s","deckId","flashcards","setFlashcards","currentCardIndex","setCurrentCardIndex","isLoading","setIsLoading","loadDeck","deckFlashcards","sort","a","b","Date","nextReview","handleRateCard","difficulty","currentCard","id","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","front","back","onRate","currentDeck","_c","$RefreshReg$"],"sources":["C:/Users/5019508/Documents/dev/Mnemo/src/pages/Study/StudyPage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getDeckFlashcards, updateFlashcardDifficulty } from '../../services/flashcards';\r\nimport Flashcard from '../../components/Flashcard/FlashCard';\r\nimport './StudyPage.css';\r\n\r\nconst StudyPage = () => {\r\n  const { deckId } = useParams();\r\n  const [flashcards, setFlashcards] = useState([]);\r\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const loadDeck = async () => {\r\n      setIsLoading(true);\r\n      const deckFlashcards = getDeckFlashcards(deckId);\r\n      // Ordenar por prioridade de revisão\r\n      deckFlashcards.sort((a, b) => new Date(a.nextReview) - new Date(b.nextReview));\r\n      setFlashcards(deckFlashcards);\r\n      setIsLoading(false);\r\n    };\r\n    \r\n    loadDeck();\r\n  }, [deckId]);\r\n\r\n  const handleRateCard = (difficulty) => {\r\n    const currentCard = flashcards[currentCardIndex];\r\n    updateFlashcardDifficulty(currentCard.id, difficulty);\r\n    \r\n    // Avançar para o próximo card ou reiniciar\r\n    if (currentCardIndex < flashcards.length - 1) {\r\n      setCurrentCardIndex(currentCardIndex + 1);\r\n    } else {\r\n      setCurrentCardIndex(0);\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <div className=\"loading\">Carregando flashcards...</div>;\r\n  }\r\n\r\n  if (flashcards.length === 0) {\r\n    return <div className=\"empty-deck\">Nenhum flashcard neste deck ainda.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"study-page\">\r\n      <div className=\"progress-indicator\">\r\n        Card {currentCardIndex + 1} de {flashcards.length}\r\n      </div>\r\n      \r\n      <Flashcard\r\n        front={flashcards[currentCardIndex].front}\r\n        back={flashcards[currentCardIndex].back}\r\n        onRate={handleRateCard}\r\n        currentDeck={deckId}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudyPage;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,iBAAiB,EAAEC,yBAAyB,QAAQ,2BAA2B;AACxF,OAAOC,SAAS,MAAM,sCAAsC;AAC5D,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAO,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC9B,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMgB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3BD,YAAY,CAAC,IAAI,CAAC;MAClB,MAAME,cAAc,GAAGf,iBAAiB,CAACO,MAAM,CAAC;MAChD;MACAQ,cAAc,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACG,UAAU,CAAC,GAAG,IAAID,IAAI,CAACD,CAAC,CAACE,UAAU,CAAC,CAAC;MAC9EX,aAAa,CAACM,cAAc,CAAC;MAC7BF,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDC,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACP,MAAM,CAAC,CAAC;EAEZ,MAAMc,cAAc,GAAIC,UAAU,IAAK;IACrC,MAAMC,WAAW,GAAGf,UAAU,CAACE,gBAAgB,CAAC;IAChDT,yBAAyB,CAACsB,WAAW,CAACC,EAAE,EAAEF,UAAU,CAAC;;IAErD;IACA,IAAIZ,gBAAgB,GAAGF,UAAU,CAACiB,MAAM,GAAG,CAAC,EAAE;MAC5Cd,mBAAmB,CAACD,gBAAgB,GAAG,CAAC,CAAC;IAC3C,CAAC,MAAM;MACLC,mBAAmB,CAAC,CAAC,CAAC;IACxB;EACF,CAAC;EAED,IAAIC,SAAS,EAAE;IACb,oBAAOR,OAAA;MAAKsB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChE;EAEA,IAAIvB,UAAU,CAACiB,MAAM,KAAK,CAAC,EAAE;IAC3B,oBAAOrB,OAAA;MAAKsB,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC7E;EAEA,oBACE3B,OAAA;IAAKsB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBvB,OAAA;MAAKsB,SAAS,EAAC,oBAAoB;MAAAC,QAAA,GAAC,OAC7B,EAACjB,gBAAgB,GAAG,CAAC,EAAC,MAAI,EAACF,UAAU,CAACiB,MAAM;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eAEN3B,OAAA,CAACF,SAAS;MACR8B,KAAK,EAAExB,UAAU,CAACE,gBAAgB,CAAC,CAACsB,KAAM;MAC1CC,IAAI,EAAEzB,UAAU,CAACE,gBAAgB,CAAC,CAACuB,IAAK;MACxCC,MAAM,EAAEb,cAAe;MACvBc,WAAW,EAAE5B;IAAO;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzB,EAAA,CArDID,SAAS;EAAA,QACMN,SAAS;AAAA;AAAAqC,EAAA,GADxB/B,SAAS;AAuDf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}