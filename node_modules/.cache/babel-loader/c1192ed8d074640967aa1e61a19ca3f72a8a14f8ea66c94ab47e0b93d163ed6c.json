{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\5019508\\\\Documents\\\\dev\\\\Mnemo\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\n\n// Criação do contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Provider do AuthContext\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n\n  // Função de login\n  const login = async (email, password) => {\n    try {\n      // Simulação de um login (substitua pela sua lógica de autenticação real)\n      if (email === 'lele@lele.com' && password === 'senha123') {\n        setCurrentUser({\n          email\n        }); // Usuário logado\n      } else {\n        throw new Error('Credenciais inválidas');\n      }\n    } catch (error) {\n      throw new Error(error.message || 'Erro no login');\n    }\n  };\n\n  // Função de logout\n  const logout = () => {\n    setCurrentUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook customizado para usar o contexto\n_s(AuthProvider, \"D3+eUn/eYbOcEwoCOjOk5Grmif4=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","login","email","password","Error","error","message","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/5019508/Documents/dev/Mnemo/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\n// Criação do contexto\r\nconst AuthContext = createContext();\r\n\r\n// Provider do AuthContext\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  // Função de login\r\n  const login = async (email, password) => {\r\n    try {\r\n      // Simulação de um login (substitua pela sua lógica de autenticação real)\r\n      if (email === 'lele@lele.com' && password === 'senha123') {\r\n        setCurrentUser({ email }); // Usuário logado\r\n      } else {\r\n        throw new Error('Credenciais inválidas');\r\n      }\r\n    } catch (error) {\r\n      throw new Error(error.message || 'Erro no login');\r\n    }\r\n  };\r\n\r\n  // Função de logout\r\n  const logout = () => {\r\n    setCurrentUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ currentUser, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook customizado para usar o contexto\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACA,MAAMU,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF;MACA,IAAID,KAAK,KAAK,eAAe,IAAIC,QAAQ,KAAK,UAAU,EAAE;QACxDH,cAAc,CAAC;UAAEE;QAAM,CAAC,CAAC,CAAC,CAAC;MAC7B,CAAC,MAAM;QACL,MAAM,IAAIE,KAAK,CAAC,uBAAuB,CAAC;MAC1C;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAID,KAAK,CAACC,KAAK,CAACC,OAAO,IAAI,eAAe,CAAC;IACnD;EACF,CAAC;;EAED;EACA,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBP,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEV,WAAW;MAAEE,KAAK;MAAEM;IAAO,CAAE;IAAAV,QAAA,EACzDA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAf,EAAA,CA7BaF,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AA8BzB,OAAO,MAAMmB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMxB,UAAU,CAACG,WAAW,CAAC;AAAA;AAACqB,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}