{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\5019508\\\\Documents\\\\dev\\\\Mnemo\\\\src\\\\components\\\\ProgressChart\\\\ProgressChart.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport './ProgressChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressChart = ({\n  data\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstance = useRef(null);\n  useEffect(() => {\n    if (chartRef.current && data) {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n      }\n      const ctx = chartRef.current.getContext('2d');\n      chartInstance.current = new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: data.labels,\n          datasets: [{\n            label: 'Flashcards Dominados',\n            data: data.values,\n            borderColor: '#371cea',\n            backgroundColor: 'rgba(55, 28, 234, 0.1)',\n            tension: 0.3,\n            fill: true\n          }]\n        },\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            },\n            tooltip: {\n              callbacks: {\n                label: context => `${context.dataset.label}: ${context.raw}`\n              }\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: true,\n              max: Math.max(...data.values) + 5\n            }\n          }\n        }\n      });\n    }\n    return () => {\n      if (chartInstance.current) {\n        chartInstance.current.destroy();\n      }\n    };\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: chartRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n};\n_s(ProgressChart, \"u5+iHnwD4hjVcMuzTE/TbI78erc=\");\n_c = ProgressChart;\nexport default ProgressChart;\nvar _c;\n$RefreshReg$(_c, \"ProgressChart\");","map":{"version":3,"names":["useEffect","useRef","Chart","jsxDEV","_jsxDEV","ProgressChart","data","_s","chartRef","chartInstance","current","destroy","ctx","getContext","type","labels","datasets","label","values","borderColor","backgroundColor","tension","fill","options","responsive","plugins","legend","position","tooltip","callbacks","context","dataset","raw","scales","y","beginAtZero","max","Math","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/5019508/Documents/dev/Mnemo/src/components/ProgressChart/ProgressChart.jsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\r\nimport Chart from 'chart.js/auto';\r\nimport './ProgressChart.css';\r\n\r\nconst ProgressChart = ({ data }) => {\r\n  const chartRef = useRef(null);\r\n  const chartInstance = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (chartRef.current && data) {\r\n      if (chartInstance.current) {\r\n        chartInstance.current.destroy();\r\n      }\r\n\r\n      const ctx = chartRef.current.getContext('2d');\r\n      chartInstance.current = new Chart(ctx, {\r\n        type: 'line',\r\n        data: {\r\n          labels: data.labels,\r\n          datasets: [{\r\n            label: 'Flashcards Dominados',\r\n            data: data.values,\r\n            borderColor: '#371cea',\r\n            backgroundColor: 'rgba(55, 28, 234, 0.1)',\r\n            tension: 0.3,\r\n            fill: true\r\n          }]\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              position: 'top',\r\n            },\r\n            tooltip: {\r\n              callbacks: {\r\n                label: (context) => `${context.dataset.label}: ${context.raw}`\r\n              }\r\n            }\r\n          },\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n              max: Math.max(...data.values) + 5\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (chartInstance.current) {\r\n        chartInstance.current.destroy();\r\n      }\r\n    };\r\n  }, [data]);\r\n\r\n  return <canvas ref={chartRef} />;\r\n};\r\n\r\nexport default ProgressChart;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMQ,aAAa,GAAGR,MAAM,CAAC,IAAI,CAAC;EAElCD,SAAS,CAAC,MAAM;IACd,IAAIQ,QAAQ,CAACE,OAAO,IAAIJ,IAAI,EAAE;MAC5B,IAAIG,aAAa,CAACC,OAAO,EAAE;QACzBD,aAAa,CAACC,OAAO,CAACC,OAAO,CAAC,CAAC;MACjC;MAEA,MAAMC,GAAG,GAAGJ,QAAQ,CAACE,OAAO,CAACG,UAAU,CAAC,IAAI,CAAC;MAC7CJ,aAAa,CAACC,OAAO,GAAG,IAAIR,KAAK,CAACU,GAAG,EAAE;QACrCE,IAAI,EAAE,MAAM;QACZR,IAAI,EAAE;UACJS,MAAM,EAAET,IAAI,CAACS,MAAM;UACnBC,QAAQ,EAAE,CAAC;YACTC,KAAK,EAAE,sBAAsB;YAC7BX,IAAI,EAAEA,IAAI,CAACY,MAAM;YACjBC,WAAW,EAAE,SAAS;YACtBC,eAAe,EAAE,wBAAwB;YACzCC,OAAO,EAAE,GAAG;YACZC,IAAI,EAAE;UACR,CAAC;QACH,CAAC;QACDC,OAAO,EAAE;UACPC,UAAU,EAAE,IAAI;UAChBC,OAAO,EAAE;YACPC,MAAM,EAAE;cACNC,QAAQ,EAAE;YACZ,CAAC;YACDC,OAAO,EAAE;cACPC,SAAS,EAAE;gBACTZ,KAAK,EAAGa,OAAO,IAAK,GAAGA,OAAO,CAACC,OAAO,CAACd,KAAK,KAAKa,OAAO,CAACE,GAAG;cAC9D;YACF;UACF,CAAC;UACDC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,WAAW,EAAE,IAAI;cACjBC,GAAG,EAAEC,IAAI,CAACD,GAAG,CAAC,GAAG9B,IAAI,CAACY,MAAM,CAAC,GAAG;YAClC;UACF;QACF;MACF,CAAC,CAAC;IACJ;IAEA,OAAO,MAAM;MACX,IAAIT,aAAa,CAACC,OAAO,EAAE;QACzBD,aAAa,CAACC,OAAO,CAACC,OAAO,CAAC,CAAC;MACjC;IACF,CAAC;EACH,CAAC,EAAE,CAACL,IAAI,CAAC,CAAC;EAEV,oBAAOF,OAAA;IAAQkC,GAAG,EAAE9B;EAAS;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAClC,CAAC;AAACnC,EAAA,CAtDIF,aAAa;AAAAsC,EAAA,GAAbtC,aAAa;AAwDnB,eAAeA,aAAa;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}