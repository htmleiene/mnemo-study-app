{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\5019508\\\\Documents\\\\dev\\\\Mnemo\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// AuthContext.js\n\nimport React, { createContext, useState, useContext } from 'react';\n\n// Criação do contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Provider do AuthContext\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(() => {\n    // Tenta carregar o usuário salvo no localStorage\n    const savedUser = localStorage.getItem('currentUser');\n    return savedUser ? JSON.parse(savedUser) : null;\n  });\n\n  // Função de login\n  const login = async (email, password) => {\n    try {\n      // Simulação de login com verificação de localStorage\n      const savedUsers = JSON.parse(localStorage.getItem('users')) || [];\n      const user = savedUsers.find(u => u.email === email && u.password === password);\n      if (user) {\n        setCurrentUser(user); // Usuário encontrado e logado\n        localStorage.setItem('currentUser', JSON.stringify(user)); // Salva o usuário no localStorage\n      } else {\n        throw new Error('Credenciais inválidas');\n      }\n    } catch (error) {\n      throw new Error(error.message || 'Erro no login');\n    }\n  };\n\n  // Função de logout\n  const logout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('currentUser');\n  };\n\n  // Função para registrar novo usuário\n  const register = (email, password) => {\n    const savedUsers = JSON.parse(localStorage.getItem('users')) || [];\n\n    // Verifica se o usuário já existe\n    if (savedUsers.some(u => u.email === email)) {\n      throw new Error('Usuário já existe');\n    }\n    const newUser = {\n      email,\n      password\n    };\n    savedUsers.push(newUser);\n    localStorage.setItem('users', JSON.stringify(savedUsers));\n    return newUser;\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      login,\n      logout,\n      register\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook customizado para usar o contexto\n_s(AuthProvider, \"H9dOcS+eOjLVEFH1PZtVBosr/k4=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","savedUser","localStorage","getItem","JSON","parse","login","email","password","savedUsers","user","find","u","setItem","stringify","Error","error","message","logout","removeItem","register","some","newUser","push","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/5019508/Documents/dev/Mnemo/src/contexts/AuthContext.js"],"sourcesContent":["// AuthContext.js\r\n\r\nimport React, { createContext, useState, useContext } from 'react';\r\n\r\n// Criação do contexto\r\nconst AuthContext = createContext();\r\n\r\n// Provider do AuthContext\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(() => {\r\n    // Tenta carregar o usuário salvo no localStorage\r\n    const savedUser = localStorage.getItem('currentUser');\r\n    return savedUser ? JSON.parse(savedUser) : null;\r\n  });\r\n\r\n  // Função de login\r\n  const login = async (email, password) => {\r\n    try {\r\n      // Simulação de login com verificação de localStorage\r\n      const savedUsers = JSON.parse(localStorage.getItem('users')) || [];\r\n\r\n      const user = savedUsers.find(u => u.email === email && u.password === password);\r\n\r\n      if (user) {\r\n        setCurrentUser(user); // Usuário encontrado e logado\r\n        localStorage.setItem('currentUser', JSON.stringify(user)); // Salva o usuário no localStorage\r\n      } else {\r\n        throw new Error('Credenciais inválidas');\r\n      }\r\n    } catch (error) {\r\n      throw new Error(error.message || 'Erro no login');\r\n    }\r\n  };\r\n\r\n  // Função de logout\r\n  const logout = () => {\r\n    setCurrentUser(null);\r\n    localStorage.removeItem('currentUser');\r\n  };\r\n\r\n  // Função para registrar novo usuário\r\n  const register = (email, password) => {\r\n    const savedUsers = JSON.parse(localStorage.getItem('users')) || [];\r\n    \r\n    // Verifica se o usuário já existe\r\n    if (savedUsers.some(u => u.email === email)) {\r\n      throw new Error('Usuário já existe');\r\n    }\r\n\r\n    const newUser = { email, password };\r\n    savedUsers.push(newUser);\r\n    localStorage.setItem('users', JSON.stringify(savedUsers));\r\n\r\n    return newUser;\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ currentUser, login, logout, register }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook customizado para usar o contexto\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":";;;AAAA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,MAAM;IACnD;IACA,MAAMU,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACrD,OAAOF,SAAS,GAAGG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,GAAG,IAAI;EACjD,CAAC,CAAC;;EAEF;EACA,MAAMK,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF;MACA,MAAMC,UAAU,GAAGL,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;MAElE,MAAMO,IAAI,GAAGD,UAAU,CAACE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACL,KAAK,KAAKA,KAAK,IAAIK,CAAC,CAACJ,QAAQ,KAAKA,QAAQ,CAAC;MAE/E,IAAIE,IAAI,EAAE;QACRV,cAAc,CAACU,IAAI,CAAC,CAAC,CAAC;QACtBR,YAAY,CAACW,OAAO,CAAC,aAAa,EAAET,IAAI,CAACU,SAAS,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC;MAC7D,CAAC,MAAM;QACL,MAAM,IAAIK,KAAK,CAAC,uBAAuB,CAAC;MAC1C;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd,MAAM,IAAID,KAAK,CAACC,KAAK,CAACC,OAAO,IAAI,eAAe,CAAC;IACnD;EACF,CAAC;;EAED;EACA,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBlB,cAAc,CAAC,IAAI,CAAC;IACpBE,YAAY,CAACiB,UAAU,CAAC,aAAa,CAAC;EACxC,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAGA,CAACb,KAAK,EAAEC,QAAQ,KAAK;IACpC,MAAMC,UAAU,GAAGL,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;;IAElE;IACA,IAAIM,UAAU,CAACY,IAAI,CAACT,CAAC,IAAIA,CAAC,CAACL,KAAK,KAAKA,KAAK,CAAC,EAAE;MAC3C,MAAM,IAAIQ,KAAK,CAAC,mBAAmB,CAAC;IACtC;IAEA,MAAMO,OAAO,GAAG;MAAEf,KAAK;MAAEC;IAAS,CAAC;IACnCC,UAAU,CAACc,IAAI,CAACD,OAAO,CAAC;IACxBpB,YAAY,CAACW,OAAO,CAAC,OAAO,EAAET,IAAI,CAACU,SAAS,CAACL,UAAU,CAAC,CAAC;IAEzD,OAAOa,OAAO;EAChB,CAAC;EAED,oBACE5B,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAAE1B,WAAW;MAAEO,KAAK;MAAEY,MAAM;MAAEE;IAAS,CAAE;IAAAvB,QAAA,EACnEA;EAAQ;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAA/B,EAAA,CAvDaF,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAwDzB,OAAO,MAAMmC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMxC,UAAU,CAACG,WAAW,CAAC;AAAA;AAACqC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}