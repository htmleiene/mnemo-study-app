{"ast":null,"code":"import { getFromStorage } from '../utils/storage';\n// import { generateStudyPlan } from './ai';\n\nconst STUDY_DATA_KEY = 'study_analytics';\nexport const getStudyAnalytics = async (userId, range = 'week') => {\n  var _getFromStorage;\n  // Simulação - na prática viria de uma API\n  const studyData = ((_getFromStorage = getFromStorage(STUDY_DATA_KEY)) === null || _getFromStorage === void 0 ? void 0 : _getFromStorage[userId]) || generateMockData();\n  return {\n    cardsStudied: studyData[range].cardsStudied,\n    cardsChange: calculateChange(studyData, range, 'cardsStudied'),\n    studyTime: studyData[range].studyTime,\n    timeChange: calculateChange(studyData, range, 'studyTime'),\n    accuracyRate: studyData[range].accuracyRate,\n    accuracyChange: calculateChange(studyData, range, 'accuracyRate'),\n    streak: studyData.streak.current,\n    streakChange: studyData.streak.change,\n    progressChart: generateChartData(range),\n    deckPerformance: generateDeckPerformance()\n  };\n};\nconst calculateChange = (data, range, metric) => {\n  const current = data[range][metric];\n  let previous;\n  if (range === 'week') {\n    previous = data.lastWeek[metric];\n  } else if (range === 'month') {\n    previous = data.lastMonth[metric];\n  } else {\n    previous = data.lastYear[metric];\n  }\n  return previous > 0 ? Math.round((current - previous) / previous * 100) : 0;\n};\nconst generateMockData = () => {\n  const today = new Date();\n  const dayOfWeek = today.getDay();\n  return {\n    week: {\n      cardsStudied: 24,\n      studyTime: 3.5,\n      accuracyRate: 78\n    },\n    lastWeek: {\n      cardsStudied: 18,\n      studyTime: 2.8,\n      accuracyRate: 72\n    },\n    month: {\n      cardsStudied: 120,\n      studyTime: 18,\n      accuracyRate: 75\n    },\n    lastMonth: {\n      cardsStudied: 95,\n      studyTime: 14,\n      accuracyRate: 70\n    },\n    year: {\n      cardsStudied: 980,\n      studyTime: 156,\n      accuracyRate: 80\n    },\n    lastYear: {\n      cardsStudied: 750,\n      studyTime: 120,\n      accuracyRate: 78\n    },\n    streak: {\n      current: dayOfWeek + 3,\n      // Simula 3 dias consecutivos\n      change: 3\n    }\n  };\n};\nconst generateChartData = range => {\n  const labels = [];\n  const values = [];\n  if (range === 'week') {\n    const days = ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'];\n    for (let i = 0; i < 7; i++) {\n      labels.push(days[i]);\n      values.push(Math.floor(Math.random() * 10) + 5);\n    }\n  } else if (range === 'month') {\n    for (let i = 1; i <= 4; i++) {\n      labels.push(`Semana ${i}`);\n      values.push(Math.floor(Math.random() * 30) + 15);\n    }\n  } else {\n    const months = ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'];\n    for (let i = 0; i < 12; i++) {\n      labels.push(months[i]);\n      values.push(Math.floor(Math.random() * 100) + 50);\n    }\n  }\n  return {\n    labels,\n    values\n  };\n};\nconst generateDeckPerformance = () => {\n  const decks = [{\n    id: 'bio-101',\n    name: 'Biologia Celular',\n    color: '#4CAF50'\n  }, {\n    id: 'chem-101',\n    name: 'Química Orgânica',\n    color: '#9C27B0'\n  }, {\n    id: 'math-101',\n    name: 'Cálculo I',\n    color: '#2196F3'\n  }, {\n    id: 'hist-101',\n    name: 'História Moderna',\n    color: '#FF9800'\n  }];\n  return decks.map(deck => ({\n    ...deck,\n    mastery: Math.floor(Math.random() * 50) + 50\n  }));\n};","map":{"version":3,"names":["getFromStorage","STUDY_DATA_KEY","getStudyAnalytics","userId","range","_getFromStorage","studyData","generateMockData","cardsStudied","cardsChange","calculateChange","studyTime","timeChange","accuracyRate","accuracyChange","streak","current","streakChange","change","progressChart","generateChartData","deckPerformance","generateDeckPerformance","data","metric","previous","lastWeek","lastMonth","lastYear","Math","round","today","Date","dayOfWeek","getDay","week","month","year","labels","values","days","i","push","floor","random","months","decks","id","name","color","map","deck","mastery"],"sources":["C:/Users/5019508/Documents/dev/Mnemo/src/services/analytics.js"],"sourcesContent":["import { getFromStorage } from '../utils/storage';\r\n// import { generateStudyPlan } from './ai';\r\n\r\nconst STUDY_DATA_KEY = 'study_analytics';\r\n\r\nexport const getStudyAnalytics = async (userId, range = 'week') => {\r\n  // Simulação - na prática viria de uma API\r\n  const studyData = getFromStorage(STUDY_DATA_KEY)?.[userId] || generateMockData();\r\n  \r\n  return {\r\n    cardsStudied: studyData[range].cardsStudied,\r\n    cardsChange: calculateChange(studyData, range, 'cardsStudied'),\r\n    studyTime: studyData[range].studyTime,\r\n    timeChange: calculateChange(studyData, range, 'studyTime'),\r\n    accuracyRate: studyData[range].accuracyRate,\r\n    accuracyChange: calculateChange(studyData, range, 'accuracyRate'),\r\n    streak: studyData.streak.current,\r\n    streakChange: studyData.streak.change,\r\n    progressChart: generateChartData(range),\r\n    deckPerformance: generateDeckPerformance()\r\n  };\r\n};\r\n\r\nconst calculateChange = (data, range, metric) => {\r\n  const current = data[range][metric];\r\n  let previous;\r\n  \r\n  if (range === 'week') {\r\n    previous = data.lastWeek[metric];\r\n  } else if (range === 'month') {\r\n    previous = data.lastMonth[metric];\r\n  } else {\r\n    previous = data.lastYear[metric];\r\n  }\r\n  \r\n  return previous > 0 ? Math.round(((current - previous) / previous) * 100) : 0;\r\n};\r\n\r\nconst generateMockData = () => {\r\n  const today = new Date();\r\n  const dayOfWeek = today.getDay();\r\n  \r\n  return {\r\n    week: {\r\n      cardsStudied: 24,\r\n      studyTime: 3.5,\r\n      accuracyRate: 78\r\n    },\r\n    lastWeek: {\r\n      cardsStudied: 18,\r\n      studyTime: 2.8,\r\n      accuracyRate: 72\r\n    },\r\n    month: {\r\n      cardsStudied: 120,\r\n      studyTime: 18,\r\n      accuracyRate: 75\r\n    },\r\n    lastMonth: {\r\n      cardsStudied: 95,\r\n      studyTime: 14,\r\n      accuracyRate: 70\r\n    },\r\n    year: {\r\n      cardsStudied: 980,\r\n      studyTime: 156,\r\n      accuracyRate: 80\r\n    },\r\n    lastYear: {\r\n      cardsStudied: 750,\r\n      studyTime: 120,\r\n      accuracyRate: 78\r\n    },\r\n    streak: {\r\n      current: dayOfWeek + 3, // Simula 3 dias consecutivos\r\n      change: 3\r\n    }\r\n  };\r\n};\r\n\r\nconst generateChartData = (range) => {\r\n  const labels = [];\r\n  const values = [];\r\n  \r\n  if (range === 'week') {\r\n    const days = ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'];\r\n    for (let i = 0; i < 7; i++) {\r\n      labels.push(days[i]);\r\n      values.push(Math.floor(Math.random() * 10) + 5);\r\n    }\r\n  } else if (range === 'month') {\r\n    for (let i = 1; i <= 4; i++) {\r\n      labels.push(`Semana ${i}`);\r\n      values.push(Math.floor(Math.random() * 30) + 15);\r\n    }\r\n  } else {\r\n    const months = ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'];\r\n    for (let i = 0; i < 12; i++) {\r\n      labels.push(months[i]);\r\n      values.push(Math.floor(Math.random() * 100) + 50);\r\n    }\r\n  }\r\n  \r\n  return { labels, values };\r\n};\r\n\r\nconst generateDeckPerformance = () => {\r\n  const decks = [\r\n    { id: 'bio-101', name: 'Biologia Celular', color: '#4CAF50' },\r\n    { id: 'chem-101', name: 'Química Orgânica', color: '#9C27B0' },\r\n    { id: 'math-101', name: 'Cálculo I', color: '#2196F3' },\r\n    { id: 'hist-101', name: 'História Moderna', color: '#FF9800' }\r\n  ];\r\n  \r\n  return decks.map(deck => ({\r\n    ...deck,\r\n    mastery: Math.floor(Math.random() * 50) + 50\r\n  }));\r\n};\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD;;AAEA,MAAMC,cAAc,GAAG,iBAAiB;AAExC,OAAO,MAAMC,iBAAiB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,KAAK,GAAG,MAAM,KAAK;EAAA,IAAAC,eAAA;EACjE;EACA,MAAMC,SAAS,GAAG,EAAAD,eAAA,GAAAL,cAAc,CAACC,cAAc,CAAC,cAAAI,eAAA,uBAA9BA,eAAA,CAAiCF,MAAM,CAAC,KAAII,gBAAgB,CAAC,CAAC;EAEhF,OAAO;IACLC,YAAY,EAAEF,SAAS,CAACF,KAAK,CAAC,CAACI,YAAY;IAC3CC,WAAW,EAAEC,eAAe,CAACJ,SAAS,EAAEF,KAAK,EAAE,cAAc,CAAC;IAC9DO,SAAS,EAAEL,SAAS,CAACF,KAAK,CAAC,CAACO,SAAS;IACrCC,UAAU,EAAEF,eAAe,CAACJ,SAAS,EAAEF,KAAK,EAAE,WAAW,CAAC;IAC1DS,YAAY,EAAEP,SAAS,CAACF,KAAK,CAAC,CAACS,YAAY;IAC3CC,cAAc,EAAEJ,eAAe,CAACJ,SAAS,EAAEF,KAAK,EAAE,cAAc,CAAC;IACjEW,MAAM,EAAET,SAAS,CAACS,MAAM,CAACC,OAAO;IAChCC,YAAY,EAAEX,SAAS,CAACS,MAAM,CAACG,MAAM;IACrCC,aAAa,EAAEC,iBAAiB,CAAChB,KAAK,CAAC;IACvCiB,eAAe,EAAEC,uBAAuB,CAAC;EAC3C,CAAC;AACH,CAAC;AAED,MAAMZ,eAAe,GAAGA,CAACa,IAAI,EAAEnB,KAAK,EAAEoB,MAAM,KAAK;EAC/C,MAAMR,OAAO,GAAGO,IAAI,CAACnB,KAAK,CAAC,CAACoB,MAAM,CAAC;EACnC,IAAIC,QAAQ;EAEZ,IAAIrB,KAAK,KAAK,MAAM,EAAE;IACpBqB,QAAQ,GAAGF,IAAI,CAACG,QAAQ,CAACF,MAAM,CAAC;EAClC,CAAC,MAAM,IAAIpB,KAAK,KAAK,OAAO,EAAE;IAC5BqB,QAAQ,GAAGF,IAAI,CAACI,SAAS,CAACH,MAAM,CAAC;EACnC,CAAC,MAAM;IACLC,QAAQ,GAAGF,IAAI,CAACK,QAAQ,CAACJ,MAAM,CAAC;EAClC;EAEA,OAAOC,QAAQ,GAAG,CAAC,GAAGI,IAAI,CAACC,KAAK,CAAE,CAACd,OAAO,GAAGS,QAAQ,IAAIA,QAAQ,GAAI,GAAG,CAAC,GAAG,CAAC;AAC/E,CAAC;AAED,MAAMlB,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,MAAMwB,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACxB,MAAMC,SAAS,GAAGF,KAAK,CAACG,MAAM,CAAC,CAAC;EAEhC,OAAO;IACLC,IAAI,EAAE;MACJ3B,YAAY,EAAE,EAAE;MAChBG,SAAS,EAAE,GAAG;MACdE,YAAY,EAAE;IAChB,CAAC;IACDa,QAAQ,EAAE;MACRlB,YAAY,EAAE,EAAE;MAChBG,SAAS,EAAE,GAAG;MACdE,YAAY,EAAE;IAChB,CAAC;IACDuB,KAAK,EAAE;MACL5B,YAAY,EAAE,GAAG;MACjBG,SAAS,EAAE,EAAE;MACbE,YAAY,EAAE;IAChB,CAAC;IACDc,SAAS,EAAE;MACTnB,YAAY,EAAE,EAAE;MAChBG,SAAS,EAAE,EAAE;MACbE,YAAY,EAAE;IAChB,CAAC;IACDwB,IAAI,EAAE;MACJ7B,YAAY,EAAE,GAAG;MACjBG,SAAS,EAAE,GAAG;MACdE,YAAY,EAAE;IAChB,CAAC;IACDe,QAAQ,EAAE;MACRpB,YAAY,EAAE,GAAG;MACjBG,SAAS,EAAE,GAAG;MACdE,YAAY,EAAE;IAChB,CAAC;IACDE,MAAM,EAAE;MACNC,OAAO,EAAEiB,SAAS,GAAG,CAAC;MAAE;MACxBf,MAAM,EAAE;IACV;EACF,CAAC;AACH,CAAC;AAED,MAAME,iBAAiB,GAAIhB,KAAK,IAAK;EACnC,MAAMkC,MAAM,GAAG,EAAE;EACjB,MAAMC,MAAM,GAAG,EAAE;EAEjB,IAAInC,KAAK,KAAK,MAAM,EAAE;IACpB,MAAMoC,IAAI,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IAC9D,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1BH,MAAM,CAACI,IAAI,CAACF,IAAI,CAACC,CAAC,CAAC,CAAC;MACpBF,MAAM,CAACG,IAAI,CAACb,IAAI,CAACc,KAAK,CAACd,IAAI,CAACe,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;IACjD;EACF,CAAC,MAAM,IAAIxC,KAAK,KAAK,OAAO,EAAE;IAC5B,KAAK,IAAIqC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC3BH,MAAM,CAACI,IAAI,CAAC,UAAUD,CAAC,EAAE,CAAC;MAC1BF,MAAM,CAACG,IAAI,CAACb,IAAI,CAACc,KAAK,CAACd,IAAI,CAACe,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;IAClD;EACF,CAAC,MAAM;IACL,MAAMC,MAAM,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACnG,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC3BH,MAAM,CAACI,IAAI,CAACG,MAAM,CAACJ,CAAC,CAAC,CAAC;MACtBF,MAAM,CAACG,IAAI,CAACb,IAAI,CAACc,KAAK,CAACd,IAAI,CAACe,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC;IACnD;EACF;EAEA,OAAO;IAAEN,MAAM;IAAEC;EAAO,CAAC;AAC3B,CAAC;AAED,MAAMjB,uBAAuB,GAAGA,CAAA,KAAM;EACpC,MAAMwB,KAAK,GAAG,CACZ;IAAEC,EAAE,EAAE,SAAS;IAAEC,IAAI,EAAE,kBAAkB;IAAEC,KAAK,EAAE;EAAU,CAAC,EAC7D;IAAEF,EAAE,EAAE,UAAU;IAAEC,IAAI,EAAE,kBAAkB;IAAEC,KAAK,EAAE;EAAU,CAAC,EAC9D;IAAEF,EAAE,EAAE,UAAU;IAAEC,IAAI,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAU,CAAC,EACvD;IAAEF,EAAE,EAAE,UAAU;IAAEC,IAAI,EAAE,kBAAkB;IAAEC,KAAK,EAAE;EAAU,CAAC,CAC/D;EAED,OAAOH,KAAK,CAACI,GAAG,CAACC,IAAI,KAAK;IACxB,GAAGA,IAAI;IACPC,OAAO,EAAEvB,IAAI,CAACc,KAAK,CAACd,IAAI,CAACe,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG;EAC5C,CAAC,CAAC,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}