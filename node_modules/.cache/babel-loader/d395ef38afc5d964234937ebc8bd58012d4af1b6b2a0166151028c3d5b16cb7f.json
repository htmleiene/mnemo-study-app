{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\5019508\\\\Documents\\\\dev\\\\Mnemo\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useEffect, useContext } from 'react';\nimport { getCurrentUser, login, register as authRegister, logout as authLogout } from '../services/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check auth state on mount\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        const user = await getCurrentUser();\n        setUser(user);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadUser();\n  }, []);\n  const signIn = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const user = await login(email, password);\n      setUser(user);\n      return user;\n    } catch (err) {\n      setError(err.message || 'Login failed');\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Using register instead of signUp\n  const register = async (email, password, name) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const user = await authRegister(email, password, name);\n      setUser(user);\n      return user;\n    } catch (err) {\n      setError(err.message || 'Registration failed');\n      throw err;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const signOut = async () => {\n    try {\n      await authLogout();\n      setUser(null);\n      setError(null);\n    } catch (err) {\n      setError(err.message || 'Logout failed');\n      throw err;\n    }\n  };\n  const clearError = () => setError(null);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      isLoading,\n      error,\n      signIn,\n      register,\n      // Only exposing register, not signUp\n      signOut,\n      clearError,\n      isAuthenticated: !!user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"caAZa649wyY9nHJT6au393y4yCs=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useContext","getCurrentUser","login","register","authRegister","logout","authLogout","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isLoading","setIsLoading","error","setError","loadUser","err","message","signIn","email","password","name","signOut","clearError","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/5019508/Documents/dev/Mnemo/src/contexts/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect, useContext } from 'react';\r\nimport { \r\n  getCurrentUser, \r\n  login, \r\n  register as authRegister,\r\n  logout as authLogout \r\n} from '../services/auth';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Check auth state on mount\r\n  useEffect(() => {\r\n    const loadUser = async () => {\r\n      try {\r\n        const user = await getCurrentUser();\r\n        setUser(user);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    loadUser();\r\n  }, []);\r\n\r\n  const signIn = async (email, password) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const user = await login(email, password);\r\n      setUser(user);\r\n      return user;\r\n    } catch (err) {\r\n      setError(err.message || 'Login failed');\r\n      throw err;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Using register instead of signUp\r\n  const register = async (email, password, name) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const user = await authRegister(email, password, name);\r\n      setUser(user);\r\n      return user;\r\n    } catch (err) {\r\n      setError(err.message || 'Registration failed');\r\n      throw err;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const signOut = async () => {\r\n    try {\r\n      await authLogout();\r\n      setUser(null);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError(err.message || 'Logout failed');\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const clearError = () => setError(null);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        isLoading,\r\n        error,\r\n        signIn,\r\n        register, // Only exposing register, not signUp\r\n        signOut,\r\n        clearError,\r\n        isAuthenticated: !!user\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACtE,SACEC,cAAc,EACdC,KAAK,EACLC,QAAQ,IAAIC,YAAY,EACxBC,MAAM,IAAIC,UAAU,QACf,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGZ,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMa,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMoB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,MAAMN,IAAI,GAAG,MAAMZ,cAAc,CAAC,CAAC;QACnCa,OAAO,CAACD,IAAI,CAAC;MACf,CAAC,CAAC,OAAOO,GAAG,EAAE;QACZF,QAAQ,CAACE,GAAG,CAACC,OAAO,CAAC;MACvB,CAAC,SAAS;QACRL,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IACDG,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACxCR,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAML,IAAI,GAAG,MAAMX,KAAK,CAACqB,KAAK,EAAEC,QAAQ,CAAC;MACzCV,OAAO,CAACD,IAAI,CAAC;MACb,OAAOA,IAAI;IACb,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZF,QAAQ,CAACE,GAAG,CAACC,OAAO,IAAI,cAAc,CAAC;MACvC,MAAMD,GAAG;IACX,CAAC,SAAS;MACRJ,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMb,QAAQ,GAAG,MAAAA,CAAOoB,KAAK,EAAEC,QAAQ,EAAEC,IAAI,KAAK;IAChDT,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAML,IAAI,GAAG,MAAMT,YAAY,CAACmB,KAAK,EAAEC,QAAQ,EAAEC,IAAI,CAAC;MACtDX,OAAO,CAACD,IAAI,CAAC;MACb,OAAOA,IAAI;IACb,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZF,QAAQ,CAACE,GAAG,CAACC,OAAO,IAAI,qBAAqB,CAAC;MAC9C,MAAMD,GAAG;IACX,CAAC,SAAS;MACRJ,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMU,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAMpB,UAAU,CAAC,CAAC;MAClBQ,OAAO,CAAC,IAAI,CAAC;MACbI,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZF,QAAQ,CAACE,GAAG,CAACC,OAAO,IAAI,eAAe,CAAC;MACxC,MAAMD,GAAG;IACX;EACF,CAAC;EAED,MAAMO,UAAU,GAAGA,CAAA,KAAMT,QAAQ,CAAC,IAAI,CAAC;EAEvC,oBACEV,OAAA,CAACC,WAAW,CAACmB,QAAQ;IACnBC,KAAK,EAAE;MACLhB,IAAI;MACJE,SAAS;MACTE,KAAK;MACLK,MAAM;MACNnB,QAAQ;MAAE;MACVuB,OAAO;MACPC,UAAU;MACVG,eAAe,EAAE,CAAC,CAACjB;IACrB,CAAE;IAAAF,QAAA,EAEDA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACtB,EAAA,CAhFWF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAkFzB,OAAO,MAAM0B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGtC,UAAU,CAACS,WAAW,CAAC;EACvC,IAAI,CAAC6B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}